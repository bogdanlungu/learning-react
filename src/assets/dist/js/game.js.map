{"version":3,"sources":["node_modules/browser-pack/_prelude.js","game.js","src/assets/js/game.jsx"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","StarsFrame","React","createClass","render","stars","this","props","numberOfStars","push","createElement","key","className","id","ButtonFrame","disabled","button","correct","onClick","acceptAnswer","selectedNumbers","checkAnswer","AnswerFrame","map","unselectNumber","bind","NumbersFrame","numbers","selectNumber","usedNumbers","indexOf","Game","getInitialState","Math","floor","random","clickedNumber","state","setState","concat","indexOfNumber","splice","sumOfSelectedNumbers","reduce","p","console","log","ReactDOM","document","getElementById"],"mappings":"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","file":"game.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\"use strict\";\n\n/* Start component\n----------------------------------- */\nvar StarsFrame = React.createClass({\n  render: function render() {\n    var stars = [];\n    for (var i = 0; i < this.props.numberOfStars; i++) {\n      stars.push(React.createElement(\"span\", { key: i, className: \"glyphicon glyphicon-star\" }));\n    }\n    return React.createElement(\n      \"div\",\n      { id: \"stars-frame\" },\n      React.createElement(\n        \"div\",\n        { className: \"well\" },\n        stars\n      )\n    );\n  }\n});\n\n/* Button component\n----------------------------------- */\nvar ButtonFrame = React.createClass({\n  render: function render() {\n    var disabled,\n        button,\n        correct = this.props.correct;\n\n    switch (correct) {\n      case true:\n        button = React.createElement(\n          \"button\",\n          { className: \"btn btn-success\",\n            onClick: this.props.acceptAnswer },\n          React.createElement(\"span\", { className: \"glyphicon glyphicon-ok\" })\n        );\n        break;\n      case false:\n        button = React.createElement(\n          \"button\",\n          { className: \"btn btn-danger\" },\n          React.createElement(\"span\", { className: \"glyphicon glyphicon-remove\" })\n        );\n        break;\n      default:\n        disabled = this.props.selectedNumbers.length === 0;\n        button = React.createElement(\n          \"button\",\n          { className: \"btn btn-primary\", disabled: disabled,\n            onClick: this.props.checkAnswer },\n          \"=\"\n        );\n    }\n\n    return React.createElement(\n      \"div\",\n      { id: \"button-frame\" },\n      button\n    );\n  }\n});\n\n/* Answer component\n----------------------------------- */\nvar AnswerFrame = React.createClass({\n  render: function render() {\n    var props = this.props;\n    var selectedNumbers = props.selectedNumbers.map(function (i) {\n      return React.createElement(\n        \"span\",\n        { key: i, onClick: props.unselectNumber.bind(null, i) },\n        i\n      );\n    });\n\n    return React.createElement(\n      \"div\",\n      { id: \"answer-frame\" },\n      React.createElement(\n        \"div\",\n        { className: \"well\" },\n        selectedNumbers\n      )\n    );\n  }\n});\n\n/* Numbers frame\n----------------------------------- */\nvar NumbersFrame = React.createClass({\n  render: function render() {\n\n    var numbers = [],\n        className,\n        selectNumber = this.props.selectNumber,\n        selectedNumbers = this.props.selectedNumbers,\n        usedNumbers = this.props.usedNumbers;\n    for (var i = 0; i <= 9; i++) {\n      className = \"number selected-\" + (selectedNumbers.indexOf(i) >= 0); // see if the number it is in the array\n      className += \" used-\" + (usedNumbers.indexOf(i) >= 0);\n      numbers.push(React.createElement(\n        \"div\",\n        { key: i, className: className, onClick: selectNumber.bind(null, i) },\n        i\n      ));\n    }\n    return React.createElement(\n      \"div\",\n      { id: \"numbers-frame\" },\n      React.createElement(\n        \"div\",\n        { className: \"well\" },\n        numbers\n      )\n    );\n  }\n});\n\n/* Main component\n----------------------------------- */\nvar Game = React.createClass({\n  getInitialState: function getInitialState() {\n    return {\n      numberOfStars: Math.floor(Math.random() * 9) + 1,\n      selectedNumbers: [],\n      usedNumbers: [],\n      correct: null\n    };\n  },\n  selectNumber: function selectNumber(clickedNumber) {\n    if (this.state.selectedNumbers.indexOf(clickedNumber) < 0) {\n      this.setState({\n        selectedNumbers: this.state.selectedNumbers.concat(clickedNumber),\n        correct: null\n      });\n    }\n  },\n  unselectNumber: function unselectNumber(clickedNumber) {\n    var selectedNumbers = this.state.selectedNumbers,\n        indexOfNumber = selectedNumbers.indexOf(clickedNumber);\n\n    selectedNumbers.splice(indexOfNumber, 1);\n\n    this.setState({ selectedNumbers: selectedNumbers, correct: null });\n  },\n  sumOfSelectedNumbers: function sumOfSelectedNumbers() {\n    return this.state.selectedNumbers.reduce(function (p, n) {\n      return p + n;\n    }, 0);\n  },\n  checkAnswer: function checkAnswer() {\n    var correct = this.state.numberOfStars == this.sumOfSelectedNumbers();\n    this.setState({ correct: correct });\n    console.log(this.sumOfSelectedNumbers());\n    console.log(correct);\n  },\n  acceptAnswer: function acceptAnswer() {\n    var usedNumbers = this.state.usedNumbers.concat(this.state.selectedNumbers);\n    this.setState({\n      selectedNumbers: [],\n      usedNumbers: usedNumbers,\n      correct: null,\n      numberOfStars: Math.floor(Math.random() * 9) + 1\n    });\n  },\n  render: function render() {\n    var numberOfStars = this.state.numberOfStars,\n        selectedNumbers = this.state.selectedNumbers,\n        usedNumbers = this.state.usedNumbers,\n        correct = this.state.correct,\n        checkAnswer = this.checkAnswer;\n    return React.createElement(\n      \"div\",\n      { id: \"game\" },\n      React.createElement(\n        \"h2\",\n        null,\n        \"Play game!\"\n      ),\n      React.createElement(\"hr\", null),\n      React.createElement(\n        \"div\",\n        { className: \"clearfix\" },\n        React.createElement(StarsFrame, { numberOfStars: numberOfStars }),\n        React.createElement(ButtonFrame, { selectedNumbers: selectedNumbers,\n          correct: correct,\n          checkAnswer: checkAnswer,\n          acceptAnswer: this.acceptAnswer }),\n        React.createElement(AnswerFrame, { selectedNumbers: selectedNumbers,\n          unselectNumber: this.unselectNumber })\n      ),\n      React.createElement(NumbersFrame, { selectedNumbers: selectedNumbers,\n        usedNumbers: usedNumbers,\n        selectNumber: this.selectNumber })\n    );\n  }\n});\n\n/* Render\n----------------------------------- */\nReactDOM.render(React.createElement(Game, null), document.getElementById('container'));\n\n},{}]},{},[1])\n\n","/* Start component\n----------------------------------- */\nvar StarsFrame = React.createClass({\n  render: function () {\n    var stars = [];\n    for (var i = 0; i < this.props.numberOfStars; i++) {\n      stars.push(\n        <span key={i} className=\"glyphicon glyphicon-star\"></span>\n      );\n    }\n    return (\n      <div id=\"stars-frame\">\n        <div className=\"well\">\n          {stars}\n        </div>\n      </div>\n    )\n  }\n});\n\n\n/* Button component\n----------------------------------- */\nvar ButtonFrame = React.createClass({\n  render: function () {\n    var disabled, button, correct = this.props.correct;\n\n    switch (correct) {\n      case true:\n        button = (\n          <button className=\"btn btn-success\"\n            onClick={this.props.acceptAnswer}>\n            <span className=\"glyphicon glyphicon-ok\"></span>\n          </button>\n        );\n        break;\n      case false:\n        button = (\n          <button className=\"btn btn-danger\">\n            <span className=\"glyphicon glyphicon-remove\"></span>\n          </button>\n        );\n        break;\n      default:\n        disabled = (this.props.selectedNumbers.length === 0);\n        button = (\n          <button className=\"btn btn-primary\" disabled={disabled}\n            onClick={this.props.checkAnswer}>=</button>\n        );\n    }\n\n    return (\n      <div id=\"button-frame\">\n        {button}\n      </div>\n    )\n  }\n});\n\n\n/* Answer component\n----------------------------------- */\nvar AnswerFrame = React.createClass({\n  render: function () {\n    var props = this.props;\n    var selectedNumbers = props.selectedNumbers.map(function (i) {\n      return (\n        <span key={i} onClick={props.unselectNumber.bind(null, i)}>\n          {i}\n        </span>\n      )\n    });\n\n    return (\n      <div id=\"answer-frame\">\n        <div className=\"well\">\n          {selectedNumbers}\n        </div>\n      </div>\n    )\n  }\n});\n\n\n/* Numbers frame\n----------------------------------- */\nvar NumbersFrame = React.createClass({\n  render: function () {\n\n    var numbers = [], className,\n      selectNumber = this.props.selectNumber,\n      selectedNumbers = this.props.selectedNumbers,\n      usedNumbers = this.props.usedNumbers;\n    for (var i = 0; i <= 9; i++) {\n      className = \"number selected-\" + (selectedNumbers.indexOf(i) >= 0); // see if the number it is in the array\n      className += \" used-\" + (usedNumbers.indexOf(i) >= 0);\n      numbers.push(\n        <div key={i} className={className} onClick={selectNumber.bind(null, i)}>\n          {i}\n        </div>\n      );\n    }\n    return (\n      <div id=\"numbers-frame\">\n        <div className=\"well\">\n          {numbers}\n        </div>\n      </div>\n    )\n  }\n});\n\n\n/* Main component\n----------------------------------- */\nvar Game = React.createClass({\n  getInitialState: function () {\n    return {\n      numberOfStars: Math.floor(Math.random() * 9) + 1,\n      selectedNumbers: [],\n      usedNumbers: [],\n      correct: null\n    };\n  },\n  selectNumber: function (clickedNumber) {\n    if (this.state.selectedNumbers.indexOf(clickedNumber) < 0) {\n      this.setState(\n        {\n          selectedNumbers: this.state.selectedNumbers.concat(clickedNumber),\n          correct: null\n        }\n      );\n    }\n  },\n  unselectNumber: function (clickedNumber) {\n    var selectedNumbers = this.state.selectedNumbers,\n      indexOfNumber = selectedNumbers.indexOf(clickedNumber);\n\n    selectedNumbers.splice(indexOfNumber, 1);\n\n    this.setState({ selectedNumbers: selectedNumbers, correct: null });\n\n  },\n  sumOfSelectedNumbers: function () {\n    return this.state.selectedNumbers.reduce(function (p, n) {\n      return p + n;\n    }, 0);\n  },\n  checkAnswer: function () {\n    var correct = (this.state.numberOfStars == this.sumOfSelectedNumbers());\n    this.setState({ correct: correct });\n    console.log(this.sumOfSelectedNumbers());\n    console.log(correct);\n  },\n  acceptAnswer: function () {\n    var usedNumbers = this.state.usedNumbers.concat(this.state.selectedNumbers);\n    this.setState({\n      selectedNumbers: [],\n      usedNumbers: usedNumbers,\n      correct: null,\n      numberOfStars: Math.floor(Math.random() * 9) + 1\n    })\n  },\n  render: function () {\n    var numberOfStars = this.state.numberOfStars,\n      selectedNumbers = this.state.selectedNumbers,\n      usedNumbers = this.state.usedNumbers,\n      correct = this.state.correct,\n      checkAnswer = this.checkAnswer;\n    return (\n      <div id=\"game\">\n        <h2>Play game!</h2>\n        <hr />\n        <div className=\"clearfix\">\n          <StarsFrame numberOfStars={numberOfStars} />\n          <ButtonFrame selectedNumbers={selectedNumbers}\n            correct={correct}\n            checkAnswer={checkAnswer}\n            acceptAnswer={this.acceptAnswer} />\n          <AnswerFrame selectedNumbers={selectedNumbers}\n            unselectNumber={this.unselectNumber} />\n        </div>\n        <NumbersFrame selectedNumbers={selectedNumbers}\n          usedNumbers={usedNumbers}\n          selectNumber={this.selectNumber} />\n      </div>\n    );\n  }\n});\n\n\n/* Render\n----------------------------------- */\nReactDOM.render(\n  <Game />,\n  document.getElementById('container')\n);\n"]}