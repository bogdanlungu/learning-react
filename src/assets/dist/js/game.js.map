{"version":3,"sources":["node_modules/browser-pack/_prelude.js","game.js","src/assets/js/game.jsx"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","StarsFrame","React","createClass","render","stars","this","props","numberOfStars","push","createElement","key","className","id","ButtonFrame","disabled","selectedNumbers","AnswerFrame","map","onClick","unselectNumber","bind","NumbersFrame","numbers","selectNumber","indexOf","Game","getInitialState","Math","floor","random","clickedNumber","state","setState","concat","indexOfNumber","splice","ReactDOM","document","getElementById"],"mappings":"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","file":"game.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\"use strict\";\n\n/* Start component\n----------------------------------- */\nvar StarsFrame = React.createClass({\n    render: function render() {\n        var stars = [];\n        for (var i = 0; i < this.props.numberOfStars; i++) {\n            stars.push(React.createElement(\"span\", { key: i, className: \"glyphicon glyphicon-star\" }));\n        }\n        return React.createElement(\n            \"div\",\n            { id: \"stars-frame\" },\n            React.createElement(\n                \"div\",\n                { className: \"well\" },\n                stars\n            )\n        );\n    }\n});\n\n/* Button component\n----------------------------------- */\nvar ButtonFrame = React.createClass({\n    render: function render() {\n        var disabled;\n        disabled = this.props.selectedNumbers.length === 0;\n        return React.createElement(\n            \"div\",\n            { id: \"button-frame\" },\n            React.createElement(\n                \"button\",\n                { className: \"btn btn-primary\", disabled: disabled },\n                \"=\"\n            )\n        );\n    }\n});\n\n/* Answer component\n----------------------------------- */\nvar AnswerFrame = React.createClass({\n    render: function render() {\n        var props = this.props;\n        var selectedNumbers = props.selectedNumbers.map(function (i) {\n            return React.createElement(\n                \"span\",\n                { key: i, onClick: props.unselectNumber.bind(null, i) },\n                i\n            );\n        });\n\n        return React.createElement(\n            \"div\",\n            { id: \"answer-frame\" },\n            React.createElement(\n                \"div\",\n                { className: \"well\" },\n                selectedNumbers\n            )\n        );\n    }\n});\n\n/* Numbers frame\n----------------------------------- */\nvar NumbersFrame = React.createClass({\n    render: function render() {\n\n        var numbers = [],\n            className,\n            selectNumber = this.props.selectNumber,\n            selectedNumbers = this.props.selectedNumbers;\n        for (var i = 0; i <= 9; i++) {\n            className = \"number selected-\" + (selectedNumbers.indexOf(i) >= 0); // see if the number it is in the array\n            numbers.push(React.createElement(\n                \"div\",\n                { key: i, className: className, onClick: selectNumber.bind(null, i) },\n                i\n            ));\n        }\n        return React.createElement(\n            \"div\",\n            { id: \"numbers-frame\" },\n            React.createElement(\n                \"div\",\n                { className: \"well\" },\n                numbers\n            )\n        );\n    }\n});\n\n/* Main component\n----------------------------------- */\nvar Game = React.createClass({\n    getInitialState: function getInitialState() {\n        return { numberOfStars: Math.floor(Math.random() * 9) + 1,\n            selectedNumbers: []\n        };\n    },\n    selectNumber: function selectNumber(clickedNumber) {\n        if (this.state.selectedNumbers.indexOf(clickedNumber) < 0) {\n            this.setState({ selectedNumbers: this.state.selectedNumbers.concat(clickedNumber) });\n        }\n    },\n    unselectNumber: function unselectNumber(clickedNumber) {\n        var selectedNumbers = this.state.selectedNumbers,\n            indexOfNumber = selectedNumbers.indexOf(clickedNumber);\n\n        selectedNumbers.splice(indexOfNumber, 1);\n\n        this.setState({ selectedNumbers: selectedNumbers });\n    },\n    render: function render() {\n        var numberOfStars = this.state.numberOfStars,\n            selectedNumbers = this.state.selectedNumbers;\n        return React.createElement(\n            \"div\",\n            { id: \"game\" },\n            React.createElement(\n                \"h2\",\n                null,\n                \"Play game!\"\n            ),\n            React.createElement(\"hr\", null),\n            React.createElement(\n                \"div\",\n                { className: \"clearfix\" },\n                React.createElement(StarsFrame, { numberOfStars: numberOfStars }),\n                React.createElement(ButtonFrame, { selectedNumbers: selectedNumbers }),\n                React.createElement(AnswerFrame, { selectedNumbers: selectedNumbers,\n                    unselectNumber: this.unselectNumber })\n            ),\n            React.createElement(NumbersFrame, { selectedNumbers: selectedNumbers,\n                selectNumber: this.selectNumber })\n        );\n    }\n});\n\n/* Render\n----------------------------------- */\nReactDOM.render(React.createElement(Game, null), document.getElementById('container'));\n\n},{}]},{},[1])\n\n","/* Start component\n----------------------------------- */\nvar StarsFrame = React.createClass({\n    render: function () {\n        var stars = [];\n        for (var i = 0; i < this.props.numberOfStars; i++) {\n            stars.push(\n                <span key={i} className=\"glyphicon glyphicon-star\"></span>\n            );\n        }\n        return (\n            <div id=\"stars-frame\">\n                <div className=\"well\">\n                    {stars}\n                </div>\n            </div>\n        )\n    }\n});\n\n\n/* Button component\n----------------------------------- */\nvar ButtonFrame = React.createClass({\n    render: function () {\n        var disabled;\n        disabled = ( this.props.selectedNumbers.length === 0 );\n        return (\n            <div id=\"button-frame\">\n                <button className=\"btn btn-primary\" disabled={disabled}>=</button>\n            </div>\n        )\n    }\n});\n\n\n/* Answer component\n----------------------------------- */\nvar AnswerFrame = React.createClass({\n    render: function () {\n        var props = this.props;\n        var selectedNumbers = props.selectedNumbers.map(function (i) {\n            return (\n                <span key={i} onClick={props.unselectNumber.bind(null, i)}>\n                    {i}\n                </span>\n            )\n        });\n\n        return (\n            <div id=\"answer-frame\">\n                <div className=\"well\">\n                    {selectedNumbers}\n                </div>\n            </div>\n        )\n    }\n});\n\n\n/* Numbers frame\n----------------------------------- */\nvar NumbersFrame = React.createClass({\n    render: function () {\n\n        var numbers = [], className,\n            selectNumber = this.props.selectNumber,\n            selectedNumbers = this.props.selectedNumbers;\n        for (var i = 0; i <= 9; i++) {\n            className = \"number selected-\" + (selectedNumbers.indexOf(i) >= 0); // see if the number it is in the array\n            numbers.push(\n                <div key={i} className={className} onClick={selectNumber.bind(null, i)}>\n                    {i}\n                </div>\n            );\n        }\n        return (\n            <div id=\"numbers-frame\">\n                <div className=\"well\">\n                    {numbers}\n                </div>\n            </div>\n        )\n    }\n});\n\n\n/* Main component\n----------------------------------- */\nvar Game = React.createClass({\n    getInitialState: function () {\n        return { numberOfStars: Math.floor(Math.random() * 9) + 1,\n                 selectedNumbers: []\n        };\n    },\n    selectNumber: function (clickedNumber) {\n        if (this.state.selectedNumbers.indexOf(clickedNumber) < 0) {\n            this.setState(\n                { selectedNumbers: this.state.selectedNumbers.concat(clickedNumber) }\n            );\n        }\n    },\n    unselectNumber: function (clickedNumber) {\n        var selectedNumbers = this.state.selectedNumbers,\n            indexOfNumber = selectedNumbers.indexOf(clickedNumber);\n\n        selectedNumbers.splice(indexOfNumber, 1);\n\n        this.setState({ selectedNumbers: selectedNumbers });\n\n    },\n    render: function () {\n        var numberOfStars = this.state.numberOfStars,\n            selectedNumbers = this.state.selectedNumbers;\n        return (\n            <div id=\"game\">\n                <h2>Play game!</h2>\n                <hr />\n                <div className=\"clearfix\">\n                    <StarsFrame numberOfStars={numberOfStars} />\n                    <ButtonFrame selectedNumbers = {selectedNumbers} />\n                    <AnswerFrame selectedNumbers={selectedNumbers}\n                                 unselectNumber={this.unselectNumber} />\n                </div>\n                <NumbersFrame selectedNumbers={selectedNumbers}\n                    selectNumber={this.selectNumber} />\n            </div>\n        );\n    }\n});\n\n\n/* Render\n----------------------------------- */\nReactDOM.render(\n    <Game />,\n    document.getElementById('container')\n);\n"]}